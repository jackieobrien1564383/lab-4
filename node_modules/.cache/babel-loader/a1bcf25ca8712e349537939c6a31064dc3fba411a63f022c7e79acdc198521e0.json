{"ast":null,"code":"var _jsxFileName = \"/app/src/components/List.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Task(props) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [props.description, \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: props.completed,\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 4\n  }, this);\n}\n_c = Task;\nfunction List(props) {\n  // var taskArray = [];\n  // for (let i=0;i<props.tasks.length;i++)\n  // {\tlet desc = props.tasks[i].description;\n  // \tlet stat= props.tasks[i].completed;\n  // \ttaskArray.push(<Task description={desc} completed={stat}/>)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        description: task.description,\n        completed: task.completed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this);\n}\n_c2 = List;\nexport default List;\nvar _c, _c2;\n$RefreshReg$(_c, \"Task\");\n$RefreshReg$(_c2, \"List\");","map":{"version":3,"names":["Task","props","_jsxDEV","children","description","type","checked","completed","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","_c","List","heading","tasks","map","task","_c2","$RefreshReg$"],"sources":["/app/src/components/List.js"],"sourcesContent":["function Task(props) {\n\treturn (\n\t\t\t<li>{props.description} <input type=\"checkbox\" checked={props.completed} readOnly /></li>\n\t);\n}\n\nfunction List(props) {\n\t// var taskArray = [];\n\t// for (let i=0;i<props.tasks.length;i++)\n\t// {\tlet desc = props.tasks[i].description;\n\t// \tlet stat= props.tasks[i].completed;\n\t// \ttaskArray.push(<Task description={desc} completed={stat}/>)\n\t// }\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>{ props.heading }</h1>\n\t\t\t<ul>\n\t\t\t\t{ props.tasks.map(task =>\n\t\t\t\t\t<Task\n\t\t\t\t\tdescription={task.description}\n\t\t\t\t\tcompleted={task.completed} /> ) }\n\t\t\t</ul>\n\t\t</div>\n\t);\n\n}\n\nexport default List;\n"],"mappings":";;AAAA,SAASA,IAAIA,CAACC,KAAK,EAAE;EACpB,oBACEC,OAAA;IAAAC,QAAA,GAAKF,KAAK,CAACG,WAAW,EAAC,GAAC,eAAAF,OAAA;MAAOG,IAAI,EAAC,UAAU;MAACC,OAAO,EAAEL,KAAK,CAACM,SAAU;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAE5F;AAACC,EAAA,GAJQb,IAAI;AAMb,SAASc,IAAIA,CAACb,KAAK,EAAE;EACpB;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACCC,OAAA;IAAAC,QAAA,gBACCD,OAAA;MAAAC,QAAA,EAAMF,KAAK,CAACc;IAAO;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC1BV,OAAA;MAAAC,QAAA,EACGF,KAAK,CAACe,KAAK,CAACC,GAAG,CAACC,IAAI,iBACrBhB,OAAA,CAACF,IAAI;QACLI,WAAW,EAAEc,IAAI,CAACd,WAAY;QAC9BG,SAAS,EAAEW,IAAI,CAACX;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAGR;AAACO,GAAA,GApBQL,IAAI;AAsBb,eAAeA,IAAI;AAAC,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}